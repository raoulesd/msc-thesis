{
  "hash": "14082e96200a95aa7e339f71ae332ceb",
  "result": {
    "markdown": "---\ntitle: Quarto Basics\nauthor: Raoul Bruens\ntoc: true\nnumber-sections: false\nhighlight-style: pygments\nformat:\n  html:\n    code-fold: true\n    html-math-method: katex\n  pdf:\n    geometry:\n      - top=30mm\n      - left=20mm\n  docx: default\nreference-location: margin\n---\n\n## Polar Axis\n\nFor a demonstration of a line plot on a polar axis, see @fig-polar.\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 34 * np.pi * r\nfig, ax = plt.subplots(\n  subplot_kw = {'projection': 'polar'} \n)\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![A line plot on a polar axis](hello_files/figure-docx/fig-polar-output-1.png){#fig-polar}\n:::\n:::\n\n\nThis is some stated fact [@graham1989concrete].\n\n## Creating ```requirements.txt```\n\nUse the following command to generate the requirements document. Make sure to exclude all Windows-related packages. I.e. Ctrl + F > \"win\" and delete all hits.\n\n\n\n```{bash}\npip freeze > requirements.txt\n```\n\n\n\n\n\n## Placing Colorbars\n\nColorbars indicate the quantitative extent of image data.\nPlacing in a figure is non-trivial because room needs to\nbe made for them. The simplest case is just attaching a \ncolorbar to each axes:^[See the [Matplotlib Gallery](https://matplotlib.org/stable/gallery/subplots_axes_and_figures/colorbar_placement.html) to explore colorbars further].\n\n::: {.cell .column-screen-inset execution_count=2}\n``` {.python .cell-code code-fold=\"true\"}\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nfig, axs = plt.subplots(2, 2)\nfig.set_size_inches(20, 8)\ncmaps = ['RdBu_r', 'viridis']\nfor col in range(2):\n    for row in range(2):\n        ax = axs[row, col]\n        pcm = ax.pcolormesh(\n          np.random.random((20, 20)) * (col + 1),\n          cmap=cmaps[col]\n        )\n        fig.colorbar(pcm, ax=ax)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](hello_files/figure-docx/cell-3-output-1.png){}\n:::\n:::\n\n\n## Widgets\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nfrom ipyleaflet import Map, Marker, basemaps, basemap_to_tiles\nm = Map(\n  basemap=basemap_to_tiles(\n    basemaps.NASAGIBS.ModisTerraTrueColorCR, \"2017-04-08\"\n  ),\n  center=(52.204793, 360.121558),\n  zoom=4\n)\nm.add_layer(Marker(location=(52.204793, 360.121558)))\nm\n```\n\n::: {.cell-output .cell-output-display execution_count=18}\n```\nMap(center=[52.204793, 360.121558], controls=(ZoomControl(options=['position', 'zoom_in_text', 'zoom_in_title'â€¦\n```\n:::\n:::\n\n\n## References\n\n",
    "supporting": [
      "hello_files\\figure-docx"
    ],
    "filters": []
  }
}